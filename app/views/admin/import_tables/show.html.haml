= javascript_tag do
  var columns = new Array();
  - for table in @tables
    - for column in ActiveRecord::Base.const_get(ActiveRecord::Base.class_name(table)).columns
      columns.push(new Array('#{table}', '#{column.name}'));
  function mergeTableSelected() {
  var o = $('select#merge_table option:selected');
  $('th select option').remove();
  $('th select').each(function(i, select) {
  select.options.add(new Option());
  $.each(columns, function(j, column) {
  if (o.text() == column[0]) {
  select.options.add(new Option(column[1]));
  }
  });
  });
  }

- form_for :merge do |f|
  %table{:border => "1", :cellpadding => "1", :cellspacing => "1"}
    %tr
      - 0.upto(@column_index_max) do |column_index|
        %th
          = f.select(column_index, [])
    \# same as before goes here
  %label= 'Select a table for merging:'
  = f.select(:table, @tables.collect { |t| [t, t] }, { :include_blank => true }, { :onchange => "mergeTableSelected();" })
  = f.submit "Merge", :disable_with => 'Merging...'


-#%p#notice= notice
-#
-#%p
-#  %b Original path:
-#  = @import_table.original_path
-#
-#= link_to 'Edit', edit_import_table_path(@import_table)
-#\|
-#= link_to 'Back', import_tables_path
